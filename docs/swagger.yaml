definitions:
  controllers.OauthTokenBody:
    properties:
      client_id:
        type: string
      client_secret:
        type: string
      grant_type:
        type: string
      password:
        type: string
      scope:
        type: string
      username:
        type: string
    type: object
  controllers.OauthTokenData:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      token_type:
        type: string
    type: object
  controllers.OauthTokenResponse:
    properties:
      data:
        $ref: '#/definitions/controllers.OauthTokenData'
      errors:
        items:
          $ref: '#/definitions/utils.APIError'
        type: array
      is_success:
        type: boolean
      meta: {}
    type: object
  controllers.UserInputForm:
    properties:
      first_name:
        type: string
      id:
        type: string
      is_staff:
        type: boolean
      is_superuser:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - first_name
    - last_name
    - password
    - username
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  utils.APIError:
    properties:
      error_code:
        type: string
      error_messages:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: dastms@gmail.com
    name: Nayan Das
  description: This is the API for the docket app
  title: Docket API
  version: "1.0"
paths:
  /oauth/token:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Create token
        in: body
        name: grants
        required: true
        schema:
          $ref: '#/definitions/controllers.OauthTokenBody'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.OauthTokenResponse'
      summary: Get Oauth bearer token
  /user/:id:
    get:
      parameters:
      - description: Create user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.User'
        "204":
          description: Not found
          schema:
            type: ""
      summary: Get a user
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create user
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/controllers.UserInputForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.User'
      summary: Create user
swagger: "2.0"
